[{"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\index.js":"1","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\App.js":"2","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\store.js":"3","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProfilePage\\ProfilePage.js":"5","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\LoginPage\\LoginPage.js":"6","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\LandingMainPage\\LandingMainPage.js":"7","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\index.js":"8","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProfilePage\\ProfilePageStyle.js":"9","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AuthForm\\AuthForm.js":"10","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\message.js":"11","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\InfoMessage\\InfoMessage.js":"12","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\user.js":"13","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\auth.js":"14","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ContentBox\\ContentBox.js":"15","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AddTask\\AddTask.js":"16","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\landingSettings.js":"17","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Dashboard\\Dashboard.js":"18","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ScoreBoard\\ScoreBoard.js":"19","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\NavLink\\NavLink.js":"20","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Logo\\Logo.js":"21","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\TaskPage\\TaskPage.js":"22","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\authReducer.js":"23","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\userReducer.js":"24","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\messageReducer.js":"25","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\goalsReducer.js":"26","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actionsTypes.js":"27","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\goals.js":"28","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\calcPercentage.js":"29","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\TaskPage\\TaskPageStyles.js":"30","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\createTask.js":"31","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProgressBar\\ProgressBar.js":"32","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Dashboard\\DashboardStyles.js":"33","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\userData.js":"34","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\dataService.js":"35","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\urls.js":"36","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\authHeader.js":"37","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\createSeasonTask.js":"38","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AddTask\\AddTaskStyles.js":"39","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\authService.js":"40","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\CreateTask\\CreateTask.js":"41","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\formatDate.js":"42","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\compareDates.js":"43","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\CreateTask\\CreateTaskStyle.js":"44","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\MainPage\\MainPage.js":"45","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\SearchMockData.js":"46","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\UserSearch.js":"47","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\Debounce.js":"48","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\SearchLogic.js":"49"},{"size":877,"mtime":1608535634824,"results":"50","hashOfConfig":"51"},{"size":1311,"mtime":1608552828099,"results":"52","hashOfConfig":"51"},{"size":344,"mtime":1608535634829,"results":"53","hashOfConfig":"51"},{"size":277,"mtime":1608535634809,"results":"54","hashOfConfig":"51"},{"size":4386,"mtime":1608552828107,"results":"55","hashOfConfig":"51"},{"size":272,"mtime":1608535634805,"results":"56","hashOfConfig":"51"},{"size":4480,"mtime":1608552828105,"results":"57","hashOfConfig":"51"},{"size":345,"mtime":1608535634828,"results":"58","hashOfConfig":"51"},{"size":1084,"mtime":1608535634808,"results":"59","hashOfConfig":"51"},{"size":6880,"mtime":1608535634792,"results":"60","hashOfConfig":"51"},{"size":235,"mtime":1608535634826,"results":"61","hashOfConfig":"51"},{"size":972,"mtime":1608535634804,"results":"62","hashOfConfig":"51"},{"size":4187,"mtime":1608535634826,"results":"63","hashOfConfig":"51"},{"size":1488,"mtime":1608552828115,"results":"64","hashOfConfig":"51"},{"size":1137,"mtime":1608552828101,"results":"65","hashOfConfig":"51"},{"size":6188,"mtime":1608552828100,"results":"66","hashOfConfig":"51"},{"size":1307,"mtime":1608552828121,"results":"67","hashOfConfig":"51"},{"size":5362,"mtime":1608552828103,"results":"68","hashOfConfig":"51"},{"size":1939,"mtime":1608535634810,"results":"69","hashOfConfig":"51"},{"size":1594,"mtime":1608552828106,"results":"70","hashOfConfig":"51"},{"size":379,"mtime":1608535634806,"results":"71","hashOfConfig":"51"},{"size":6354,"mtime":1608552828108,"results":"72","hashOfConfig":"51"},{"size":943,"mtime":1608552828117,"results":"73","hashOfConfig":"51"},{"size":1818,"mtime":1608535634828,"results":"74","hashOfConfig":"51"},{"size":464,"mtime":1608535634828,"results":"75","hashOfConfig":"51"},{"size":1642,"mtime":1608535634827,"results":"76","hashOfConfig":"51"},{"size":2207,"mtime":1608535634827,"results":"77","hashOfConfig":"51"},{"size":4169,"mtime":1608552828116,"results":"78","hashOfConfig":"51"},{"size":176,"mtime":1608535634831,"results":"79","hashOfConfig":"51"},{"size":1107,"mtime":1608552828108,"results":"80","hashOfConfig":"51"},{"size":429,"mtime":1608552828120,"results":"81","hashOfConfig":"51"},{"size":956,"mtime":1608535634809,"results":"82","hashOfConfig":"51"},{"size":2574,"mtime":1608552828104,"results":"83","hashOfConfig":"51"},{"size":135,"mtime":1608535634834,"results":"84","hashOfConfig":"51"},{"size":1644,"mtime":1608552828118,"results":"85","hashOfConfig":"51"},{"size":219,"mtime":1608535634833,"results":"86","hashOfConfig":"51"},{"size":254,"mtime":1608535634830,"results":"87","hashOfConfig":"51"},{"size":336,"mtime":1608535634831,"results":"88","hashOfConfig":"51"},{"size":1877,"mtime":1608552828100,"results":"89","hashOfConfig":"51"},{"size":425,"mtime":1608535634830,"results":"90","hashOfConfig":"51"},{"size":6056,"mtime":1608552828102,"results":"91","hashOfConfig":"51"},{"size":174,"mtime":1608544854279,"results":"92","hashOfConfig":"51"},{"size":513,"mtime":1608535634831,"results":"93","hashOfConfig":"51"},{"size":360,"mtime":1608535634799,"results":"94","hashOfConfig":"51"},{"size":6584,"mtime":1608552828105,"results":"95","hashOfConfig":"51"},{"size":959,"mtime":1608552828109,"results":"96","hashOfConfig":"51"},{"size":1483,"mtime":1608552828110,"results":"97","hashOfConfig":"51"},{"size":435,"mtime":1608552828109,"results":"98","hashOfConfig":"51"},{"size":546,"mtime":1608552828109,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"15jvhtz",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\index.js",[],["206","207"],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\App.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\store.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProfilePage\\ProfilePage.js",["208","209","210"],"import React, {\r\n\tuseState,\r\n\tuseEffect\r\n} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {\r\n\tgetUsersInfoAction,\r\n\teditUsersInfoAction,\r\n\tdeleteUsersInfoAction,\r\n\tgetUserByIdAction\r\n} from '../../redux/actions/user';\r\nimport { setMessageAction, clearMessageAction } from '../../redux/actions/message';\r\nimport InfoMessage from '../InfoMessage/InfoMessage';\r\nimport { Button, Grid, ButtonGroup, Paper } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ProfilePageStyle from './ProfilePageStyle';\r\nimport manIcon from '../../img/manIcon.svg';\r\nimport femaleIcon from '../../img/womanIcon.svg';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\n\r\nconst ProfilePage = ({\r\n\tgetUsersInfo,\r\n\teditUsersInfo,\r\n\tdeleteUsersInfo,\r\n\tuserData,\r\n\tmessage,\r\n\tsetMessage,\r\n\tgetUserById,\r\n\tisLogged\r\n}) => {\r\n\tconst classes = ProfilePageStyle();\r\n\tconst {id} = useParams();\r\n\tconst history = useHistory();\r\n\tconst [user, setUser] = useState({\r\n\t\tgender: 'female',\r\n\t\tlogin: 'Vita',\r\n\t\temail: 'v@mail.com',\r\n\t\tsubscription: 0,\r\n\t\tfollowers: 0,\r\n\t\tpoints: 0,\r\n\t\tid: 1234\r\n\t});\r\n\r\n\tconst userIcon = user.gender === 'female' ? femaleIcon : manIcon;\r\n\tuseEffect(() => {\r\n\t\tif (id) {\r\n\t\t\tgetUserById(id);\r\n\t\t} else {\r\n\t\t\tgetUsersInfo();\r\n\t\t}\r\n\t});\r\n\r\n\tconst shareLink = () => {\r\n\t\tconst { protocol, hash, host } = window.location;\r\n\t\treturn `${protocol}//${hash}${host}/account/profile/${id}`;\r\n\t}\r\n\r\n\tconst handleCopyLink = () => {\r\n\t\tnavigator.clipboard.writeText(shareLink());\r\n\t\tsetMessage('Copied link');\r\n\t}\r\n\r\n\tconst handleDeleteUser = () => {\r\n\t\tdeleteUsersInfo(user.id);\r\n\t\tlocalStorage.removeItem('jwt');\r\n\t\thistory.push('/');\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Paper className={`${classes.paper} ${classes.backgroundBlock}`}>\r\n\t\t\t\t\t\t<div className={classes.wall}></div>\r\n\t\t\t\t\t\t<div className={classes.userIcon}>\r\n\t\t\t\t\t\t\t<img src={userIcon} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.infoWrapper}>\r\n\t\t\t\t\t\t<h1>{user.login}</h1>\r\n\t\t\t\t\t\t<h3>{user.email}</h3>\r\n\t\t\t\t\t\t{!id ?\r\n\t\t\t\t\t\t<ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.btn}>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t<EditIcon/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handleDeleteUser}\r\n\t\t\t\t\t\t\t\tclassName={classes.btn}>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t<DeleteIcon/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t\t\t\tonClick={handleCopyLink}>\r\n\t\t\t\t\t\t\t\tCopy link\r\n\t\t\t\t\t\t\t\t<ShareIcon/> \r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup> : (isLogged && id ) ?\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\tSubscribe\r\n\t\t\t\t\t\t\t\t\t<BookmarkBorderIcon/>\r\n\t\t\t\t\t\t\t\t</Button> : null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<Grid item xs container direction=\"row\" spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<h4>My followers</h4>\r\n\t\t\t\t\t\t\t\t<p className={classes.count}>{user.followers }</p>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<h4>My subscription</h4>\r\n\t\t\t\t\t\t\t\t<p className={classes.count}>{user.subscription }</p>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t<h4>My points</h4>\r\n\t\t\t\t\t\t\t\t<p className={classes.count}>{user.points }</p>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<InfoMessage info={message} />\r\n\t\t\t</Grid>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tuserData: state.userReducer.userData,\r\n\t\tmessage: state.messageReducer.message,\r\n\t\tisLogged: state.authReducer.isLoggedIn\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetUsersInfo: () => {\r\n\t\t\tdispatch(getUsersInfoAction());\r\n\t\t},\r\n\t\teditUsersInfo: (userData) => {\r\n\t\t\tdispatch(editUsersInfoAction(userData));\r\n\t\t},\r\n\t\tdeleteUsersInfo: () => {\r\n\t\t\tdispatch(deleteUsersInfoAction());\r\n\t\t},\r\n\t\tsetMessage: message => {\r\n\t\t\tdispatch(setMessageAction(message));\r\n\t\t},\r\n\t\tgetUserById: message => {\r\n\t\t\tdispatch(getUserByIdAction(message));\r\n\t\t}\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\LoginPage\\LoginPage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\LandingMainPage\\LandingMainPage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\index.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProfilePage\\ProfilePageStyle.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AuthForm\\AuthForm.js",["211"],"import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../Logo/Logo';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\tauthLoginAction,\r\n\tauthRegisterAction\r\n} from '../../redux/actions/auth';\r\nimport {\r\n  CardContent,\r\n  Card,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles =  makeStyles((theme) => ({\r\n  authCard: {\r\n    width: 400,\r\n    marginTop: 50,\r\n    margin: 'auto',\r\n\t\t// background: theme.palette.primary,\r\n\t\toverflow: 'hidden'\r\n  },\r\n  root: {\r\n    background: '#57bc90',\r\n    width: '100%',\r\n    height: '100vh',\r\n\t},\r\n\twrapper: {\r\n\t\tpaddingTop: '8%',\r\n\t\tdisplay: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\t},\r\n  title: {\r\n    fontSize: 26,\r\n    textAlign: 'center',\r\n\t\tmarginBottom: 50,\r\n  },\r\n  formAuth: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  field: {\r\n    width: '100%',\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    marginBottom: '20px',\r\n\t\tfontWeight: 700,\r\n\t\tbackgroundColor: theme.palette.primary.dark,\r\n\t\tcolor: '#ffffff'\r\n  },\r\n  link: {\r\n    marginBottom: '20px',\r\n    display: 'block',\r\n    width: '100%',\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.dark\r\n  },\r\n  radio: {\r\n    padding: '20px 0',\r\n\t},\r\n\tlogoWrapper: {\r\n\t\tmaxWidth: '300px'\r\n\t}\r\n}));\r\n\r\nconst AuthForm = (props) => {\r\n\tconst { link, linkMessage, btnText, action, authRegister, authLogin, isLogged } = props;\r\n\tconst classes = useStyles();\r\n\tconst [formData, setFormData] = useState({\r\n\t\temail: '',\r\n\t\tlogin: '',\r\n\t\tpassword: '',\r\n\t\tgender: 'female'\r\n\t});\r\n\tconst [helperText, setHelperText] = useState({\r\n\t\temailError: '',\r\n\t\tloginError: '',\r\n\t\tpasswordError: ''\r\n\t});\r\n\tconst history = useHistory();\r\n\r\n\r\n\t// useEffect(() => {\r\n\t// if (isLogged) {\r\n\t// \thistory.push('/account/dashboard');\r\n\t// } else {\r\n\t// \thistory.push('/login');\r\n\t// }\r\n\t// }, [isLogged]);\r\n\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (action === 'Register' && validateFormData(formData)) {\r\n\t\t\treturn;\r\n\t\t};\r\n\t\taction === 'Register' ? handleRegister() : handleLogin();\r\n\t}\r\n\r\n\tconst handleRegister = () => {\r\n\t\tauthRegister(formData);\r\n\t\thistory.push('/login');\r\n\t}\r\n\r\n\tconst handleLogin = () => {\r\n\t\tauthLogin({\r\n\t\t\tlogin: formData.login,\r\n\t\t\tpassword: formData.password\r\n\t\t});\r\n\t\tif (isLogged) {\r\n\t\t\thistory.push('/account/dashboard');\r\n\t\t}\r\n\t}\r\n\r\n\tconst validateFormData = (formData) => {\r\n\t\tconst errors = { emailError: '', passwordError: '', loginError: '' };\r\n\t\tlet isError = false;\r\n\t\tif (!(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/).test(formData.email)) {\r\n\t\t\terrors.emailError = 'Incorrect format for email';\r\n\t\t\tisError = true;\r\n\t\t}\r\n\t\tif (formData.password.length < 6) {\r\n\t\t\terrors.passwordError = 'Password should be longer';\r\n\t\t\tisError = true;\r\n\t\t}\r\n\t\tif (formData.login.length < 3) {\r\n\t\t\terrors.loginError = 'Login should be longer';\r\n\t\t\tisError = true;\r\n\t\t}\r\n\t\tsetHelperText(errors);\r\n\t\treturn isError;\r\n\t}\r\n\r\n\treturn (\r\n\t<Box className={classes.root}>\r\n    <Box className={classes.wrapper}>\r\n\t\t\t\t<div className={classes.logoWrapper}>\r\n\t\t\t\t<Logo />\r\n\t\t\t</div>\r\n      <Card className={classes.authCard}>\r\n        <CardContent>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            component=\"h1\"\r\n            className={classes.title}\r\n          >\r\n            {action}\r\n          </Typography>\r\n          <form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t{action === 'Register' ? (\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t// type='email'\r\n\t\t\t\t\t\t\tclassName={classes.field}\r\n\t\t\t\t\t\t\terror={!!helperText.emailError}\r\n\t\t\t\t\t\t\thelperText={helperText.emailError}\r\n\t\t\t\t\t\t\tdefaultValue={formData.login}\r\n\t\t\t\t\t\t\tonChange={e => setFormData({...formData, email: e.target.value.trim()})}\r\n\t\t\t\t\t\t/>\r\n            ) : null}\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"login\"\r\n\t\t\t\t\t\t\tlabel=\"Login\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tname=\"login\"\r\n\t\t\t\t\t\t\tclassName={classes.field}\r\n\t\t\t\t\t\t\terror={action === 'Register' && !!helperText.loginError}\r\n\t\t\t\t\t\t\thelperText={action === 'Register' ? helperText.loginError : ''}\r\n\t\t\t\t\t\t\tdefaultValue={formData.login}\r\n\t\t\t\t\t\t\tonChange={e => setFormData({...formData, login: e.target.value.trim()})}\r\n\t\t\t\t\t\t/>\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              placeholder=\"******\"\r\n              name=\"password\"\r\n\t\t\t\t\t\t\tclassName={classes.field}\r\n\t\t\t\t\t\t\terror={action === 'Register' && !!helperText.passwordError}\r\n\t\t\t\t\t\t\thelperText={action === 'Register' ? helperText.passwordError : ''}\r\n\t\t\t\t\t\t\tdefaultValue={formData.login}\r\n\t\t\t\t\t\t\tonChange={e => setFormData({...formData, password: e.target.value.trim()})}\r\n            />\r\n            {action === 'Register' ? (\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\tcomponent=\"fieldset\"\r\n\t\t\t\t\t\t\t\tclassName={classes.radio}>\r\n                <FormLabel component=\"legend\">Your Gender</FormLabel>\r\n                <RadioGroup\r\n                  aria-label=\"gender\"\r\n                  row\r\n                  name=\"gender\"\r\n                  value={formData.gender}\r\n                  onChange={e => setFormData({...formData, gender: e.target.value.trim()})}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"male\"\r\n                    control={<Radio />}\r\n                    label=\"Male\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"other\"\r\n                    control={<Radio />}\r\n                    label=\"Other\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            ) : null}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n              type=\"submit\"\r\n            >\r\n              {btnText}\r\n            </Button>\r\n          </form>\r\n          <Link className={classes.link} to={link}>\r\n            {linkMessage}\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisLogged: state.authReducer.isLoggedIn,\r\n\t\tmessage: state.messageReducer.message\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tauthLogin: (userData) => {\r\n\t\t\tdispatch(authLoginAction(userData))\r\n\t\t},\r\n\t\tauthRegister: (userData) => {\r\n\t\t\tdispatch(authRegisterAction(userData))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\message.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\InfoMessage\\InfoMessage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\user.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\auth.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ContentBox\\ContentBox.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AddTask\\AddTask.js",["212","213","214","215"],"import React, { useEffect } from 'react';\r\nimport CreateTask from '../CreateTask/CreateTask';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  Grid,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport createTask from '../../utils/createTask';\r\nimport createSeasonTask from '../../utils/createSeasonTask';\r\nimport useStyles from './AddTaskStyles';\r\nimport { connect } from 'react-redux';\r\nimport { getDefaultGoalsAction } from '../../redux/actions/goals';\r\n\r\nlet mock = [\r\n  createTask('Quit smoking', `Don't smoke every day during 90 days.`),\r\n  createTask('Start jogging', `Jogging every day smoke during 90 days.`),\r\n  createTask('Drink water', `Drink water every day smoke during 90 days.`),\r\n  createTask('Read book', `Read book every day smoke during 90 days.`),\r\n];\r\n\r\nlet mockSeasons = [\r\n  createSeasonTask('Summer task', 'Get prepared to the beach season', 'Summer'),\r\n  createSeasonTask(\r\n    'Winter task',\r\n    'Run 10 km on a cold winter morning',\r\n    'Winter'\r\n  ),\r\n  createSeasonTask(\r\n    'Autumn task',\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\r\n    'Autumn'\r\n  ),\r\n  createSeasonTask(\r\n    'Spring task',\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\r\n    'Spring'\r\n  ),\r\n];\r\n\r\nfunction AddTask({ getDefaultGoals }) {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    getDefaultGoals();\r\n  });\r\n\r\n  const [seasonTasks, setSeasonTasks] = React.useState(mockSeasons);\r\n\r\n  React.useEffect(() => {\r\n    let month = new Date().getMonth() + 1;\r\n    let result = seasonTasks;\r\n\r\n    console.log(month, result);\r\n\r\n    if (month === 12 || month === 1 || month === 2) {\r\n      setSeasonTasks(result.filter((el) => el.season === 'Winter'));\r\n    } else if (month === 3 || month === 4 || month === 5) {\r\n      setSeasonTasks(result.filter((el) => el.season === 'Spring'));\r\n    } else if (month === 6 || month === 7 || month === 8) {\r\n      setSeasonTasks(result.filter((el) => el.season === 'Summer'));\r\n    } else if (month === 9 || month === 10 || month === 11) {\r\n      setSeasonTasks(result.filter((el) => el.season === 'Autumn'));\r\n    }\r\n\r\n    return;\r\n  }, []);\r\n\r\n  const [inputValues, setInputValues] = React.useState({\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  const [disabled, setDisabled] = React.useState(false);\r\n\r\n  function sendInputValues(title, description) {\r\n    setInputValues({ title: title, description: description });\r\n    setDisabled(true);\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs container direction=\"row\" spacing={3}>\r\n            <Grid item xs={12} lg={8}>\r\n              <Paper className={`${classes.paper} ${classes.goalsWrapper}`}>\r\n                <h2 className={classes.title}>Choose a Goal...</h2>\r\n                <Grid item xs={12}>\r\n                  <Paper className={classes.paper}>\r\n                    <Grid item xs container direction=\"column\" spacing={2}>\r\n                      {seasonTasks.map((el) => (\r\n                        <Grid item xs={12} className={classes.item}>\r\n                          <Paper\r\n                            onClick={() =>\r\n                              sendInputValues(el.title, el.description)\r\n                            }\r\n                            className={`${classes.paper} ${classes[el.season]}`}\r\n                          >\r\n                            <h4>{el.title}</h4>\r\n                            <Typography className={classes.description}>\r\n                              {el.description}\r\n                            </Typography>\r\n                            <p className={classes.term}>{el.season}</p>\r\n                          </Paper>\r\n                        </Grid>\r\n                      ))}\r\n\r\n                      {mock.map((el) => (\r\n                        <Grid item xs={12} className={classes.item}>\r\n                          <Paper\r\n                            onClick={() =>\r\n                              sendInputValues(el.title, el.description)\r\n                            }\r\n                            className={classes.paper}\r\n                          >\r\n                            <h4>{el.title}</h4>\r\n                            <Typography className={classes.description}>\r\n                              {el.description}\r\n                            </Typography>\r\n                            <p className={classes.term}>90 days</p>\r\n                          </Paper>\r\n                        </Grid>\r\n                      ))}\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} lg={4}>\r\n              <Paper className={classes.paper}>\r\n                <CreateTask values={inputValues} isDisabled={disabled} />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n    // <Box className={classes.wrapper}>\r\n    //   <Box className={classes.listWrapper}>\r\n    //     <Typography className={classes.header}>Choose a Goal...</Typography>\r\n    //     <List className={classes.list}>\r\n    //       {mock.map((el) => (\r\n    //         <ListItem\r\n    //           onClick={() => sendInputValues(el.title, el.description)}\r\n    //           className={classes.listItem}\r\n    //         >\r\n    //           <Typography className={classes.title}>{el.title}</Typography>\r\n    //           <Typography className={classes.description}>\r\n    //             {el.description}\r\n    //           </Typography>\r\n    //           <Typography className={classes.term}>90 days</Typography>\r\n    //         </ListItem>\r\n    //       ))}\r\n    //     </List>\r\n    //   </Box>\r\n    //   <CreateTask values={inputValues} isDisabled={disabled} />\r\n    // </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    defaultGoals: state.goalsReducer.defaultGoals,\r\n    message: state.messageReducer.message,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getDefaultGoals: () => {\r\n      dispatch(getDefaultGoalsAction());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask);\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\landingSettings.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Dashboard\\Dashboard.js",["216","217","218","219"],"import React, { useEffect } from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport createSeasonTask from '../../utils/createSeasonTask';\r\nimport createTask from '../../utils/createTask';\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport calcPercentage from '../../utils/calcPercentage';\r\nimport useStyles from './DashboardStyles';\r\nimport {\r\n  getUserGoalsAction,\r\n  editGoalByIdAction,\r\n} from '../../redux/actions/goals';\r\n\r\nlet mock = [\r\n  createTask('Quit smoking', `Don't smoke every day during 90 days.`),\r\n  createTask('Start jogging', `Jogging every day smoke during 90 days.`),\r\n  createTask('Drink water', `Drink water every day smoke during 90 days.`),\r\n  createTask('Read book', `Read book every day smoke during 90 days.`),\r\n];\r\n\r\nlet mockSeasons = [\r\n  createSeasonTask(\r\n    'Winter task',\r\n    'Run 10 km on a cold winter morning',\r\n    'Winter'\r\n  ),\r\n];\r\n\r\nmock[0].progress = 89;\r\nmock[1].progress = 70;\r\nmock[2].progress = 5;\r\nmock[3].progress = 90;\r\n\r\nmock[0].id = 1;\r\nmock[1].id = 2;\r\nmock[2].id = 3;\r\nmock[3].id = 4;\r\n\r\nmock[3].completed = true;\r\n\r\nfunction Dashboard(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { getUserGoals, editGoalById } = props;\r\n\r\n  const [mockProps, setmockProps] = React.useState(mock.concat(mockSeasons));\r\n\r\n  const [filterValue, setFilter] = React.useState('');\r\n\r\n  useEffect(() => {\r\n    getUserGoals();\r\n  });\r\n\r\n  function handleInput(value) {\r\n    setFilter(value);\r\n  }\r\n\r\n  function filterPipe(list) {\r\n    list.sort((el, ev) =>\r\n      el.completed === ev.completed ? 0 : el.completed ? 1 : -1\r\n    );\r\n\r\n    return list.filter((el) => el.title.includes(filterValue));\r\n  }\r\n\r\n  function getListItem(event, id) {\r\n    if (\r\n      event.target.nodeName !== 'BUTTON' &&\r\n      event.target.nodeName !== 'SPAN'\r\n    ) {\r\n      // переходим на страницу таски по айди\r\n      history.push(`/account/goals/${id}`);\r\n      console.log(event.target);\r\n      return;\r\n    }\r\n    return;\r\n  }\r\n\r\n  function checkTask(id) {\r\n    editGoalById(id);\r\n    // отправляем запрос на обновление прогресса таски\r\n    return;\r\n  }\r\n\r\n  function changeRoute(path) {\r\n    props.history.push(path);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={classes.title}>Your goals</h2>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.dashboardHeader}>\r\n            <TextField\r\n              onInput={(ev) => handleInput(ev.target.value)}\r\n              label=\"Search\"\r\n              size=\"small\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.addButton}\r\n              onClick={() => {\r\n                changeRoute('/account/addnew');\r\n              }}\r\n            >\r\n              Add Task\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid item xs={12}>\r\n            <Paper>\r\n              <Grid\r\n                item\r\n                xs\r\n                container\r\n                direction=\"column\"\r\n                spacing={2}\r\n                className={classes.listWrapper}\r\n              >\r\n                {filterPipe(mockProps).map((el) => (\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    key={el.id}\r\n                    onClick={(event) => getListItem(event, el.id)}\r\n                  >\r\n                    <Paper\r\n                      className={\r\n                        el.completed\r\n                          ? `${classes.listElementDisabled} ${\r\n                              classes.listElement\r\n                            } ${classes[el.season]}`\r\n                          : `${classes.listElement} ${classes[el.season]}`\r\n                      }\r\n                    >\r\n                      <Typography\r\n                        className={\r\n                          el.completed\r\n                            ? `${classes.taskText} ${classes.completed}`\r\n                            : classes.taskText\r\n                        }\r\n                      >\r\n                        {el.title}\r\n                      </Typography>\r\n                      <Box className={classes.progressBar}>\r\n                        <ProgressBar\r\n                          color=\"primary\"\r\n                          variant=\"determinate\"\r\n                          value={calcPercentage(el.progress, el.term)}\r\n                        />\r\n                      </Box>\r\n                      <Button\r\n                        disabled={el.completed}\r\n                        onClick={(event) => {\r\n                          checkTask(event.target.id);\r\n                        }}\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                      >\r\n                        Done\r\n                      </Button>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogged: state.authReducer.isLoggedIn,\r\n    message: state.messageReducer.message,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUserGoals: () => {\r\n      dispatch(getUserGoalsAction());\r\n    },\r\n    editGoalById: (id) => {\r\n      dispatch(editGoalByIdAction(id));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Dashboard));\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ScoreBoard\\ScoreBoard.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\NavLink\\NavLink.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Logo\\Logo.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\TaskPage\\TaskPage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\messageReducer.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\goalsReducer.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actionsTypes.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\goals.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\calcPercentage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\TaskPage\\TaskPageStyles.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\createTask.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProgressBar\\ProgressBar.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Dashboard\\DashboardStyles.js",["220","221","222","223"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dashboardWrapper: {\r\n    width: '90%',\r\n    margin: '0 auto',\r\n  },\r\n  taskList: {\r\n    width: '100%',\r\n    minHeight: '70vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  listElement: {\r\n    background: theme.palette.grey[100],\r\n\t\tborderRadius: '2px',\r\n\t\twidth: '100%',\r\n\t\tpadding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n\t\ttransition: '0.3s',\r\n\t\talignItems: 'center',\r\n    '&:hover:not(listElementDisabled) ': {\r\n      background: 'lightblue',\r\n      transition: '0.3s',\r\n      cursor: 'pointer',\r\n    },\r\n\t},\r\n  listElementDisabled: {\r\n\t\tbackground: theme.palette.grey[100],\r\n\t\tcolor: theme.palette.text.disabled,\r\n\t\tpointerEvents: 'none',\r\n  },\r\n  addButton: {\r\n\t\tbackground: theme.palette.primary.dark,\r\n\t\tcolor: theme.palette.getContrastText(theme.palette.primary.dark)\r\n  },\r\n\ttaskText: {\r\n\t\twidth: '20%',\r\n\t\ttextAlign: 'left',\r\n\t\tborderRight: 'solid 1px black',\r\n\t\tfontFamily: theme.typography.fontFamily,\r\n\t\tfontSize: '20px',\r\n  },\r\n  progressBar: {\r\n    width: '70%',\r\n  },\r\n  searchWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  completed: {\r\n    color: 'white',\r\n  },\r\n  link: {\r\n    width: '100%',\r\n    textDecoration: 'none',\r\n    color: theme.palette.grey[800],\r\n  },\r\n  seasonTask: {\r\n    border: '1px solid',\r\n    borderRadius: '2px',\r\n    boxSizing: 'border-box',\r\n  },\r\n  Winter: {\r\n    borderColor: 'blue',\r\n    background: 'rgb(95,112,204)',\r\n    background:\r\n      'radial-gradient(circle, rgba(95,112,204,1) 0%, rgba(0,212,255,1) 100%)',\r\n  },\r\n  Spring: {\r\n    borderColor: 'green',\r\n    background: 'rgb(50,249,85))',\r\n    background:\r\n      'radial-gradient(circle, rgba(50,249,85,1) 0%, rgba(73,128,76,1) 100%)',\r\n  },\r\n  Summer: {\r\n    borderColor: 'red',\r\n    background: 'rgb(251,36,36)',\r\n    background:\r\n      'radial-gradient(circle, rgba(251,36,36,1) 0%, rgba(145,30,30,1) 100%)',\r\n  },\r\n  Autumn: {\r\n    borderColor: 'orange',\r\n    background: 'rgb(251,173,36)',\r\n    background:\r\n      'radial-gradient(circle, rgba(251,173,36,1) 0%, rgba(176,109,22,1) 100%)',\r\n  },\r\n\tpaper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n\t},\r\n\tlistWrapper: {\r\n\t\tmargin: 0\r\n\t},\r\n\tdashboardHeader: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-between'\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\ttextAlign: 'center'\r\n\t\t}\r\n}));\r\n\r\nexport default useStyles;\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\userData.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\dataService.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\urls.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\authHeader.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\createSeasonTask.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AddTask\\AddTaskStyles.js",["224","225","226","227","228","229","230"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(\r\n  (theme) => (\r\n    console.log(theme),\r\n    {\r\n      listElementDisabled: {\r\n        background: theme.palette.grey[100],\r\n        color: theme.palette.text.disabled,\r\n        pointerEvents: 'none',\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n      },\r\n      title: {\r\n        textAlign: 'center',\r\n      },\r\n      goalsWrapper: {\r\n        height: '100%',\r\n      },\r\n      term: {\r\n        fontWeight: 700,\r\n      },\r\n      item: {\r\n        '& :hover': {\r\n          background: theme.palette.primary.light,\r\n          transition: '0.3s',\r\n          cursor: 'pointer',\r\n        },\r\n      },\r\n\r\n      title: {\r\n        width: '20%',\r\n      },\r\n      description: {\r\n        width: '68%',\r\n      },\r\n      term: {\r\n        width: '12%',\r\n      },\r\n      seasonTask: {\r\n        border: '1px solid',\r\n        borderRadius: '2px',\r\n        boxSizing: 'border-box',\r\n      },\r\n      Winter: {\r\n        borderColor: 'blue',\r\n        background: 'rgb(95,112,204)',\r\n        background:\r\n          'radial-gradient(circle, rgba(95,112,204,1) 0%, rgba(0,212,255,1) 100%)',\r\n      },\r\n      Spring: {\r\n        borderColor: 'green',\r\n        background: 'rgb(50,249,85))',\r\n        background:\r\n          'radial-gradient(circle, rgba(50,249,85,1) 0%, rgba(73,128,76,1) 100%)',\r\n      },\r\n      Summer: {\r\n        borderColor: 'red',\r\n        background: 'rgb(251,36,36)',\r\n        background:\r\n          'radial-gradient(circle, rgba(251,36,36,1) 0%, rgba(145,30,30,1) 100%)',\r\n      },\r\n      Autumn: {\r\n        borderColor: 'orange',\r\n        background: 'rgb(251,173,36)',\r\n        background:\r\n          'radial-gradient(circle, rgba(251,173,36,1) 0%, rgba(176,109,22,1) 100%)',\r\n      },\r\n    }\r\n  )\r\n);\r\n\r\nexport default useStyles;\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\authService.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\CreateTask\\CreateTask.js",["231"],"import React,{ useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport getFormattedDate from '../../utils/formatDate';\r\nimport compareDates from '../../utils/compareDates';\r\nimport { addGoalAction } from '../../redux/actions/goals';\r\nimport { Button, Box, TextField, Typography, ButtonGroup } from '@material-ui/core';\r\nimport useStyles from './CreateTaskStyle';\r\n\r\nconst helperText = {\r\n  position: 'absolute',\r\n  bottom: '-33%',\r\n};\r\n\r\nconst CreateTask = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { addGoal } = props;\r\n\tconst history = useHistory();\r\n\r\n  const [inputValues, setInputValues] = useState({\r\n    title: '',\r\n    description: '',\r\n    dateStarted: getFormattedDate(),\r\n    term: 90,\r\n  });\r\n\r\n  const [validation, setValidation] = useState({\r\n    title: false,\r\n    description: false,\r\n    dateStarted: false,\r\n  });\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setInputValues({\r\n      dateStarted: getFormattedDate(),\r\n      term: 90,\r\n      title: props.values.title,\r\n      description: props.values.description,\r\n    });\r\n\r\n    return;\r\n  }, [props.values]);\r\n\r\n  useEffect(() => {\r\n    setDisabled(props.isDisabled.disabled);\r\n    setValidation({\r\n      title: false,\r\n      description: false,\r\n      dateStarted: false,\r\n    });\r\n    return;\r\n  }, [props.isDisabled]);\r\n\r\n  function resetForm() {\r\n    setInputValues({\r\n      title: '',\r\n      description: '',\r\n      dateStarted: getFormattedDate(),\r\n      term: 90,\r\n    });\r\n    setValidation({\r\n      title: false,\r\n      description: false,\r\n      dateStarted: false,\r\n    });\r\n    setDisabled(false);\r\n  }\r\n\r\n  function handleInput(name, input) {\r\n    setInputValues({ ...inputValues, [name]: input });\r\n    setValid(name, input);\r\n    setInvalid(name, input);\r\n  }\r\n\r\n  function submitValues() {\r\n    let result = inputValues;\r\n    if (result.title && result.description) {\r\n\t\t\tif (compareDates(result.dateStarted)) {\r\n\t\t\t\tconsole.log(inputValues.dateStarted);\r\n\t\t\t\t// let date = new Date(inputValues.dateStarted);\r\n\t\t\t\t// result.dateStarted = date;\r\n\t\t\t\tconsole.log(result);\r\n        addGoal(result);\r\n      }\r\n    }\r\n  }\r\n\r\n  function setValid(name, value) {\r\n    if (name === 'dateStarted' && compareDates(value)) {\r\n      setValidation({ ...validation, [name]: false });\r\n      return;\r\n    } else if (value && name !== 'dateStarted') {\r\n      setValidation({ ...validation, [name]: false });\r\n      return;\r\n    }\r\n  }\r\n\r\n  function setInvalid(name, value) {\r\n    if (name === 'dateStarted' && !compareDates(value)) {\r\n      setValidation({ ...validation, [name]: true });\r\n      return;\r\n    } else if (!value && name !== 'dateStarted') {\r\n      setValidation({ ...validation, [name]: true });\r\n      return;\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    resetForm();\r\n    return history.push('/account/dashboard');\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <h3 className={classes.header}>\r\n        ...or Create an Own Goal\r\n      </h3>\r\n      <Box className={classes.inputWrapper}>\r\n        <TextField\r\n          disabled={disabled}\r\n          FormHelperTextProps={{ style: helperText }}\r\n          error={validation.title}\r\n          helperText={validation.title ? 'Title is required' : ''}\r\n          onFocus={(ev) => {\r\n            setValid(ev.target.name, ev.target.value);\r\n          }}\r\n          onBlur={(ev) => {\r\n            setInvalid(ev.target.name, ev.target.value);\r\n          }}\r\n          className={classes.input}\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          variant=\"outlined\"\r\n          name=\"title\"\r\n          value={inputValues.title}\r\n          onInput={(ev) => handleInput(ev.target.name, ev.target.value)}\r\n        />\r\n        <TextField\r\n          disabled={disabled}\r\n          FormHelperTextProps={{ style: { ...helperText, bottom: '-8%' } }}\r\n          multiline\r\n          rows=\"10\"\r\n          error={validation.description}\r\n          helperText={validation.description ? 'Description is required' : ''}\r\n          onFocus={(ev) => {\r\n            setValid(ev.target.name, ev.target.value);\r\n          }}\r\n          onBlur={(ev) => {\r\n            setInvalid(ev.target.name, ev.target.value);\r\n          }}\r\n          className={`${classes.input} ${classes.description}`}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          variant=\"outlined\"\r\n          name=\"description\"\r\n          value={inputValues.description}\r\n          onInput={(ev) => handleInput(ev.target.name, ev.target.value)}\r\n        />\r\n        <TextField\r\n          FormHelperTextProps={{ style: helperText }}\r\n          error={validation.dateStarted}\r\n          helperText={\r\n            validation.dateStarted ? 'Date must be bigger than today' : ''\r\n          }\r\n          onFocus={(ev) => {\r\n            setValid(ev.target.name, ev.target.value);\r\n          }}\r\n          onBlur={(ev) => {\r\n            setInvalid(ev.target.name, ev.target.value);\r\n          }}\r\n          className={classes.input}\r\n          id=\"term\"\r\n          label=\"Starting date\"\r\n          value={inputValues.dateStarted}\r\n          type=\"date\"\r\n          variant=\"outlined\"\r\n          name=\"dateStarted\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onInput={(ev) => handleInput(ev.target.name, ev.target.value)}\r\n        />\r\n      </Box>\r\n\r\n      <Typography>Term: 90 days</Typography>\r\n\r\n      <ButtonGroup variant=\"outlined\" color=\"primary\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => resetForm()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\tReset\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          onClick={() => submitValues()}\r\n        >\r\n          Submit\r\n        </Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addGoal: (data) => {\r\n      dispatch(addGoalAction(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateTask);\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\formatDate.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\compareDates.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\CreateTask\\CreateTaskStyle.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\MainPage\\MainPage.js",["232","233"],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\SearchMockData.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\UserSearch.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\Debounce.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\SearchLogic.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":13,"column":28,"nodeType":"240","messageId":"241","endLine":13,"endColumn":46},{"ruleId":"238","severity":1,"message":"242","line":37,"column":15,"nodeType":"240","messageId":"241","endLine":37,"endColumn":22},{"ruleId":"243","severity":1,"message":"244","line":78,"column":8,"nodeType":"245","endLine":78,"endColumn":30},{"ruleId":"238","severity":1,"message":"246","line":1,"column":26,"nodeType":"240","messageId":"241","endLine":1,"endColumn":35},{"ruleId":"238","severity":1,"message":"247","line":4,"column":3,"nodeType":"240","messageId":"241","endLine":4,"endColumn":6},{"ruleId":"238","severity":1,"message":"248","line":6,"column":3,"nodeType":"240","messageId":"241","endLine":6,"endColumn":7},{"ruleId":"238","severity":1,"message":"249","line":7,"column":3,"nodeType":"240","messageId":"241","endLine":7,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":68,"column":6,"nodeType":"252","endLine":68,"endColumn":8,"suggestions":"253"},{"ruleId":"238","severity":1,"message":"248","line":7,"column":3,"nodeType":"240","messageId":"241","endLine":7,"endColumn":7},{"ruleId":"238","severity":1,"message":"249","line":8,"column":3,"nodeType":"240","messageId":"241","endLine":8,"endColumn":11},{"ruleId":"238","severity":1,"message":"254","line":9,"column":3,"nodeType":"240","messageId":"241","endLine":9,"endColumn":10},{"ruleId":"238","severity":1,"message":"255","line":57,"column":21,"nodeType":"240","messageId":"241","endLine":57,"endColumn":33},{"ruleId":"256","severity":1,"message":"257","line":69,"column":5,"nodeType":"258","messageId":"259","endLine":69,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":75,"column":5,"nodeType":"258","messageId":"259","endLine":75,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":81,"column":5,"nodeType":"258","messageId":"259","endLine":81,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":87,"column":5,"nodeType":"258","messageId":"259","endLine":87,"endColumn":15},{"ruleId":"260","severity":1,"message":"261","line":5,"column":23,"nodeType":"262","messageId":"263","endLine":5,"endColumn":24},{"ruleId":"256","severity":1,"message":"264","line":34,"column":7,"nodeType":"258","messageId":"259","endLine":34,"endColumn":12},{"ruleId":"256","severity":1,"message":"265","line":40,"column":7,"nodeType":"258","messageId":"259","endLine":40,"endColumn":11},{"ruleId":"256","severity":1,"message":"257","line":51,"column":9,"nodeType":"258","messageId":"259","endLine":51,"endColumn":19},{"ruleId":"256","severity":1,"message":"257","line":57,"column":9,"nodeType":"258","messageId":"259","endLine":57,"endColumn":19},{"ruleId":"256","severity":1,"message":"257","line":63,"column":9,"nodeType":"258","messageId":"259","endLine":63,"endColumn":19},{"ruleId":"256","severity":1,"message":"257","line":69,"column":9,"nodeType":"258","messageId":"259","endLine":69,"endColumn":19},{"ruleId":"238","severity":1,"message":"266","line":82,"column":9,"nodeType":"240","messageId":"241","endLine":82,"endColumn":13},{"ruleId":"238","severity":1,"message":"267","line":4,"column":30,"nodeType":"240","messageId":"241","endLine":4,"endColumn":58},{"ruleId":"250","severity":1,"message":"268","line":92,"column":5,"nodeType":"252","endLine":92,"endColumn":7,"suggestions":"269"},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"no-unused-vars","'clearMessageAction' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Box' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'seasonTasks'. Either include it or remove the dependency array.","ArrayExpression",["272"],"'Divider' is defined but never used.","'setmockProps' is assigned a value but never used.","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","Duplicate key 'title'.","Duplicate key 'term'.","'date' is assigned a value but never used.","'updateGoalProgressByIdAction' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsersInfo'. Either include it or remove the dependency array.",["273"],"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [seasonTasks]",{"range":"278","text":"279"},"Update the dependencies array to be: [getUsersInfo]",{"range":"280","text":"281"},[2127,2129],"[seasonTasks]",[2353,2355],"[getUsersInfo]"]
