[{"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\index.js":"1","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\App.js":"2","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\store.js":"3","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProfilePage\\ProfilePage.js":"5","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\LoginPage\\LoginPage.js":"6","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\LandingMainPage\\LandingMainPage.js":"7","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\index.js":"8","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProfilePage\\ProfilePageStyle.js":"9","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AuthForm\\AuthForm.js":"10","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\message.js":"11","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\InfoMessage\\InfoMessage.js":"12","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\user.js":"13","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\auth.js":"14","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ContentBox\\ContentBox.js":"15","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AddTask\\AddTask.js":"16","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\landingSettings.js":"17","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Dashboard\\Dashboard.js":"18","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ScoreBoard\\ScoreBoard.js":"19","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\NavLink\\NavLink.js":"20","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Logo\\Logo.js":"21","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\TaskPage\\TaskPage.js":"22","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\authReducer.js":"23","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\userReducer.js":"24","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\messageReducer.js":"25","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\goalsReducer.js":"26","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actionsTypes.js":"27","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\goals.js":"28","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\calcPercentage.js":"29","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\TaskPage\\TaskPageStyles.js":"30","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\createTask.js":"31","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProgressBar\\ProgressBar.js":"32","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Dashboard\\DashboardStyles.js":"33","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\userData.js":"34","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\dataService.js":"35","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\urls.js":"36","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\authHeader.js":"37","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\createSeasonTask.js":"38","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AddTask\\AddTaskStyles.js":"39","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\authService.js":"40","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\CreateTask\\CreateTask.js":"41","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\formatDate.js":"42","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\compareDates.js":"43","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\CreateTask\\CreateTaskStyle.js":"44","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\MainPage\\MainPage.js":"45","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\SearchMockData.js":"46","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\UserSearch.js":"47","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\Debounce.js":"48","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\SearchLogic.js":"49","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AboutUsContent\\AboutUsContent.js":"50","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\HomeContent\\HomeContent.js":"51","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AuthForm\\AuthFormStyle.js":"52"},{"size":877,"mtime":1608595198239,"results":"53","hashOfConfig":"54"},{"size":1311,"mtime":1608595198200,"results":"55","hashOfConfig":"54"},{"size":344,"mtime":1608595198245,"results":"56","hashOfConfig":"54"},{"size":277,"mtime":1608595198216,"results":"57","hashOfConfig":"54"},{"size":4851,"mtime":1608595198214,"results":"58","hashOfConfig":"54"},{"size":272,"mtime":1608595198211,"results":"59","hashOfConfig":"54"},{"size":2881,"mtime":1608595198210,"results":"60","hashOfConfig":"54"},{"size":345,"mtime":1608595198243,"results":"61","hashOfConfig":"54"},{"size":1084,"mtime":1608595198215,"results":"62","hashOfConfig":"54"},{"size":5733,"mtime":1608595198202,"results":"63","hashOfConfig":"54"},{"size":235,"mtime":1608595198241,"results":"64","hashOfConfig":"54"},{"size":972,"mtime":1608595198209,"results":"65","hashOfConfig":"54"},{"size":4223,"mtime":1608595198241,"results":"66","hashOfConfig":"54"},{"size":1488,"mtime":1608595198240,"results":"67","hashOfConfig":"54"},{"size":1137,"mtime":1608595198204,"results":"68","hashOfConfig":"54"},{"size":6161,"mtime":1608595198201,"results":"69","hashOfConfig":"54"},{"size":1307,"mtime":1608595198249,"results":"70","hashOfConfig":"54"},{"size":5404,"mtime":1608595198206,"results":"71","hashOfConfig":"54"},{"size":2754,"mtime":1608595198216,"results":"72","hashOfConfig":"54"},{"size":1594,"mtime":1608595198213,"results":"73","hashOfConfig":"54"},{"size":379,"mtime":1608595198212,"results":"74","hashOfConfig":"54"},{"size":6439,"mtime":1608595198217,"results":"75","hashOfConfig":"54"},{"size":1003,"mtime":1608595198242,"results":"76","hashOfConfig":"54"},{"size":1803,"mtime":1608595198244,"results":"77","hashOfConfig":"54"},{"size":464,"mtime":1608595198244,"results":"78","hashOfConfig":"54"},{"size":1702,"mtime":1608595198242,"results":"79","hashOfConfig":"54"},{"size":2207,"mtime":1608595198242,"results":"80","hashOfConfig":"54"},{"size":4169,"mtime":1608595198240,"results":"81","hashOfConfig":"54"},{"size":176,"mtime":1608595198247,"results":"82","hashOfConfig":"54"},{"size":1111,"mtime":1608595198218,"results":"83","hashOfConfig":"54"},{"size":429,"mtime":1608595198248,"results":"84","hashOfConfig":"54"},{"size":956,"mtime":1608595198215,"results":"85","hashOfConfig":"54"},{"size":2575,"mtime":1608595198207,"results":"86","hashOfConfig":"54"},{"size":135,"mtime":1608595198249,"results":"87","hashOfConfig":"54"},{"size":1644,"mtime":1608595198246,"results":"88","hashOfConfig":"54"},{"size":219,"mtime":1608595198249,"results":"89","hashOfConfig":"54"},{"size":254,"mtime":1608595198245,"results":"90","hashOfConfig":"54"},{"size":336,"mtime":1608595198248,"results":"91","hashOfConfig":"54"},{"size":1408,"mtime":1608595198201,"results":"92","hashOfConfig":"54"},{"size":425,"mtime":1608595198246,"results":"93","hashOfConfig":"54"},{"size":6091,"mtime":1608595198205,"results":"94","hashOfConfig":"54"},{"size":174,"mtime":1608595198248,"results":"95","hashOfConfig":"54"},{"size":513,"mtime":1608595198247,"results":"96","hashOfConfig":"54"},{"size":360,"mtime":1608595198205,"results":"97","hashOfConfig":"54"},{"size":6693,"mtime":1608595198212,"results":"98","hashOfConfig":"54"},{"size":959,"mtime":1608595198219,"results":"99","hashOfConfig":"54"},{"size":1448,"mtime":1608595198220,"results":"100","hashOfConfig":"54"},{"size":435,"mtime":1608595198218,"results":"101","hashOfConfig":"54"},{"size":523,"mtime":1608595198218,"results":"102","hashOfConfig":"54"},{"size":2921,"mtime":1608595198201,"results":"103","hashOfConfig":"54"},{"size":2286,"mtime":1608595198209,"results":"104","hashOfConfig":"54"},{"size":1126,"mtime":1608595198203,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"15jvhtz",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\index.js",[],["220","221"],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\App.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\store.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProfilePage\\ProfilePage.js",["222","223","224","225","226","227","228","229"],"import React, {useEffect, useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams} from 'react-router-dom';\r\nimport {\r\n\tgetUsersInfoAction,\r\n\teditUsersInfoAction,\r\n\tdeleteUsersInfoAction,\r\n\tgetUserByIdAction\r\n} from '../../redux/actions/user';\r\nimport { setMessageAction, clearMessageAction } from '../../redux/actions/message';\r\nimport InfoMessage from '../InfoMessage/InfoMessage';\r\nimport { Button, Grid, ButtonGroup, Paper } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ProfilePageStyle from './ProfilePageStyle';\r\nimport manIcon from '../../img/manIcon.svg';\r\nimport femaleIcon from '../../img/womanIcon.svg';\r\nimport otherIcon from '../../img/otherIcon.svg';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\n\r\nconst ProfilePage = ({\r\n\teditUsersInfo,\r\n\tdeleteUsersInfo,\r\n\tuserData,\r\n\tmessage,\r\n\tsetMessage,\r\n\tgetUserById,\r\n\tisLogged,\r\n\tprofileData\r\n}) => {\r\n\tconst classes = ProfilePageStyle();\r\n\tconst {id} = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst isOwner = () => {\r\n\t\treturn isLogged && (!id || id == userData.id)\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tif (!userData) { return }\r\n\t\tif (!isOwner()) {\r\n\t\t\tgetUserById(id);\r\n\t\t} else {\r\n\t\t\tgetUserById(userData.id)\r\n\t\t}\r\n\t}, [userData, id]);\r\n\r\n\tconst shareLink = (id) => {\r\n\t\tconst { protocol, hash, host } = window.location;\r\n\t\treturn `${protocol}//${hash}${host}/account/profile/${id}`;\r\n\t}\r\n\r\n\tconst handleCopyLink = () => {\r\n\t\tnavigator.clipboard.writeText(shareLink(profileData.id));\r\n\t\tsetMessage('Copied link');\r\n\t}\r\n\r\n\tconst handleDeleteUser = () => {\r\n\t\tdeleteUsersInfo(profileData.id);\r\n\t\tlocalStorage.removeItem('jwt');\r\n\t\thistory.push('/');\r\n\t}\r\n\r\n\tconst userIcon = () => {\r\n\t\treturn profileData.gender === 'female' ? femaleIcon : profileData.gender === 'male' ? manIcon : otherIcon\r\n\t}\r\n\r\n\tif (!profileData) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<Paper className={`${classes.paper} ${classes.backgroundBlock}`}>\r\n\t\t\t\t\t\t<div className={classes.wall}></div>\r\n\t\t\t\t\t\t<div className={classes.userIcon}>\r\n\t\t\t\t\t\t\t<img src={userIcon()} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.infoWrapper}>\r\n\t\t\t\t\t\t<h1>{profileData.login.charAt(0).toUpperCase() + profileData.login.slice(1)}</h1>\r\n\t\t\t\t\t\t<h3>{profileData.email}</h3>\r\n\t\t\t\t\t\t{isLogged && (!id || id == userData.id)?\r\n\t\t\t\t\t\t<ButtonGroup variant=\"outlined\" color=\"secondary\" aria-label=\"contained primary button group\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={classes.btn}>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t<EditIcon/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handleDeleteUser}\r\n\t\t\t\t\t\t\t\tclassName={classes.btn}>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t<DeleteIcon/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t\t\t\tonClick={handleCopyLink}>\r\n\t\t\t\t\t\t\t\tCopy link\r\n\t\t\t\t\t\t\t\t<ShareIcon/> \r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup> : !(isLogged && (!id || id == userData.id)) ?\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\tSubscribe\r\n\t\t\t\t\t\t\t\t\t<BookmarkBorderIcon/>\r\n\t\t\t\t\t\t\t\t</Button> : null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<Grid item xs container direction=\"row\" spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<h4>My followers</h4>\r\n\t\t\t\t\t\t\t\t<p className={classes.count}>{userData.followers }</p>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t\t<h4>My subscription</h4>\r\n\t\t\t\t\t\t\t\t<p className={classes.count}>{userData.subscription }</p>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t\t<h4>My points</h4>\r\n\t\t\t\t\t\t\t\t<p className={classes.count}>{userData.points }</p>\r\n\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{/* <InfoMessage info={message} /> */}\r\n\t\t\t</Grid>\r\n\t)\r\n\t}\r\n\r\n\t\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tprofileData: state.userReducer.profileData,\r\n\t\tmessage: state.messageReducer.message,\r\n\t\tisLogged: state.authReducer.isLoggedIn,\r\n\t\tuserData: state.userReducer.userData,\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetUsersInfo: () => {\r\n\t\t\tdispatch(getUsersInfoAction());\r\n\t\t},\r\n\t\teditUsersInfo: (userData) => {\r\n\t\t\tdispatch(editUsersInfoAction(userData));\r\n\t\t},\r\n\t\tdeleteUsersInfo: () => {\r\n\t\t\tdispatch(deleteUsersInfoAction());\r\n\t\t},\r\n\t\tsetMessage: message => {\r\n\t\t\tdispatch(setMessageAction(message));\r\n\t\t},\r\n\t\tgetUserById: message => {\r\n\t\t\tdispatch(getUserByIdAction(message));\r\n\t\t}\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\LoginPage\\LoginPage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\LandingMainPage\\LandingMainPage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\index.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProfilePage\\ProfilePageStyle.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AuthForm\\AuthForm.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\message.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\InfoMessage\\InfoMessage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\user.js",["230","231"],"import {\r\n\tGET_USER_INFO_SUCCESS,\r\n\tGET_USER_INFO_FAILURE,\r\n\tEDIT_USER_INFO_FAILURE,\r\n\tEDIT_USER_INFO_SUCCESS,\r\n\tDELETE_USER_INFO_FAILURE,\r\n\tDELETE_USER_INFO_SUCCESS,\r\n\tGET_USER_INFO_BY_ID_SUCCESS,\r\n\tGET_USER_INFO_BY_ID_FAILURE,\r\n\tGET_USER_ACHIEVEMENTS_SUCCESS,\r\n\tGET_USER_ACHIEVEMENTS_FAILURE,\r\n\tSEARCH_USERS_SUCCESS,\r\n\tSEARCH_USERS__FAILURE,\r\n\tSUBSCRIBE_FOR_USER_SUCCESS,\r\n\tSUBSCRIBE_FOR_USER_FAILURE\r\n} from '../actionsTypes';\r\nimport dataService from '../../services/dataService';\r\nimport { setMessageAction } from './message';\r\n\r\nexport const getUsersInfoAction = () => {\r\n\treturn dispatch => {\r\n    dataService.getUser()\r\n\t\t\t.then(res => {\r\n\t\t\t\tdispatch(getUsersInfoSuccess(res.data));\r\n      })\r\n      .catch(err => {\r\n\t\t\t\tdispatch(getUsersInfoFailure());\r\n\t\t\t\tdispatch(setMessageAction(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const editUsersInfoAction = (data) => {\r\n\treturn dispatch => {\r\n    dataService.editUser(data)\r\n\t\t\t.then(res => {\r\n\t\t\t\tdispatch(editUsersInfoSuccess(res.data));\r\n\t\t\t\tdispatch(setMessageAction(res.message));\r\n      })\r\n      .catch(err => {\r\n\t\t\t\tdispatch(editUsersInfoFailure());\r\n\t\t\t\tdispatch(setMessageAction(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteUsersInfoAction = () => {\r\n\treturn dispatch => {\r\n    dataService.deleteUser()\r\n\t\t\t.then(res => {\r\n\t\t\t\tdispatch(deleteUsersInfoSuccess());\r\n\t\t\t\tdispatch(setMessageAction(res.message));\r\n      })\r\n      .catch(err => {\r\n\t\t\t\tdispatch(deleteUsersInfoFailure());\r\n\t\t\t\tdispatch(setMessageAction(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUserByIdAction = (id) => {\r\n\treturn dispatch => {\r\n    dataService.getUserInfoById(id)\r\n\t\t\t.then(res => {\r\n\t\t\t\tdispatch(getUserInfoByIdSuccess(res.data));\r\n      })\r\n      .catch(err => {\r\n\t\t\t\tdispatch(getUserInfoByIdFailure());\r\n\t\t\t\tdispatch(setMessageAction(err.message));\r\n      });\r\n  };\r\n};\r\n\r\n// export const getUserAchievementsAction = () => {\r\n// \treturn dispatch => {\r\n//     dataService.getUserAchievements()\r\n// \t\t\t.then(res => {\r\n// \t\t\t\tdispatch(getUserAchievementsSuccess(res.data));\r\n//       })\r\n//       .catch(err => {\r\n// \t\t\t\tdispatch(getUserAchievementsFailure());\r\n// \t\t\t\tdispatch(setMessageAction(err.message));\r\n//       });\r\n//   };\r\n// };\r\n\r\nexport const searchUsersAction = (param) => {\r\n\treturn dispatch => {\r\n    dataService.searchUsers(param)\r\n\t\t\t.then(res => {\r\n\t\t\t\tdispatch(searchUsersSuccess(res.data));\r\n      })\r\n      .catch(err => {\r\n\t\t\t\tdispatch(searchUsersFailure());\r\n\t\t\t\tdispatch(setMessageAction(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const subscribeForUserAction = (params) => {\r\n\treturn dispatch => {\r\n    dataService.subscribeUser(params)\r\n\t\t\t.then(res => {\r\n\t\t\t\tdispatch(subscribeForUserSuccess(res.data));\r\n\t\t\t\tdispatch(setMessageAction(res.message));\r\n      })\r\n      .catch(err => {\r\n\t\t\t\tdispatch(subscribeForUserFailure());\r\n\t\t\t\tdispatch(setMessageAction(err.message));\r\n      });\r\n  };\r\n};\r\n\r\n\r\nconst getUsersInfoSuccess = (data) => ({\r\n\ttype: GET_USER_INFO_SUCCESS,\r\n\tpayload: {\r\n\t\tdata\r\n\t}\r\n});\r\n\r\nconst getUsersInfoFailure = () => ({\r\n  type: GET_USER_INFO_FAILURE,\r\n});\r\n\r\nconst editUsersInfoSuccess = (data) => ({\r\n\ttype: EDIT_USER_INFO_FAILURE,\r\n\tpayload: {\r\n\t\tdata\r\n\t}\r\n});\r\n\r\nconst editUsersInfoFailure = () => ({\r\n  type: EDIT_USER_INFO_SUCCESS,\r\n});\r\n\r\nconst deleteUsersInfoSuccess = () => ({\r\n  type: DELETE_USER_INFO_FAILURE,\r\n});\r\n\r\nconst deleteUsersInfoFailure = () => ({\r\n  type: DELETE_USER_INFO_SUCCESS,\r\n});\r\n\r\nconst getUserInfoByIdSuccess = (data) => ({\r\n\ttype: GET_USER_INFO_BY_ID_SUCCESS,\r\n\tpayload: {\r\n\t\tdata\r\n\t}\r\n});\r\n\r\nconst getUserInfoByIdFailure = () => ({\r\n\ttype: GET_USER_INFO_BY_ID_FAILURE,\r\n});\r\n\r\nconst getUserAchievementsSuccess = (data) => ({\r\n\ttype: GET_USER_ACHIEVEMENTS_SUCCESS,\r\n\tpayload: {\r\n\t\tdata\r\n\t}\r\n});\r\n\r\nconst getUserAchievementsFailure = () => ({\r\n\ttype: GET_USER_ACHIEVEMENTS_FAILURE,\r\n\r\n});\r\n\r\nconst searchUsersSuccess = (data) => ({\r\n\ttype: SEARCH_USERS_SUCCESS,\r\n\tpayload: {\r\n\t\tdata\r\n\t}\r\n});\r\n\r\nconst searchUsersFailure = () => ({\r\n\ttype: SEARCH_USERS__FAILURE,\r\n});\r\n\r\nconst subscribeForUserSuccess = (data) => ({\r\n\ttype: SUBSCRIBE_FOR_USER_SUCCESS,\r\n\tpayload: {\r\n\t\tdata\r\n\t}\r\n});\r\n\r\nconst subscribeForUserFailure = () => ({\r\n\ttype: SUBSCRIBE_FOR_USER_FAILURE,\r\n});","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\auth.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ContentBox\\ContentBox.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AddTask\\AddTask.js",["232","233"],"import React, { useEffect } from 'react';\r\nimport CreateTask from '../CreateTask/CreateTask';\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport createTask from '../../utils/createTask';\r\nimport createSeasonTask from '../../utils/createSeasonTask';\r\nimport useStyles from './AddTaskStyles';\r\nimport { connect } from 'react-redux';\r\nimport { getDefaultGoalsAction } from '../../redux/actions/goals';\r\n\r\nlet mock = [\r\n  createTask('Quit smoking', `Don't smoke every day during 90 days.`),\r\n  createTask('Start jogging', `Jogging every day smoke during 90 days.`),\r\n  createTask('Drink water', `Drink water every day smoke during 90 days.`),\r\n  createTask('Read book', `Read book every day smoke during 90 days.`),\r\n];\r\n\r\nlet mockSeasons = [\r\n  createSeasonTask('Summer task', 'Get prepared to the beach season', 'Summer'),\r\n  createSeasonTask(\r\n    'Winter task',\r\n    'Run 10 km on a cold winter morning',\r\n    'Winter'\r\n  ),\r\n  createSeasonTask(\r\n    'Autumn task',\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\r\n    'Autumn'\r\n  ),\r\n  createSeasonTask(\r\n    'Spring task',\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit',\r\n    'Spring'\r\n  ),\r\n];\r\n\r\nfunction AddTask({ getDefaultGoals }) {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    getDefaultGoals();\r\n  },[]);\r\n\r\n  const [seasonTasks, setSeasonTasks] = React.useState(mockSeasons);\r\n\r\n  React.useEffect(() => {\r\n    let month = new Date().getMonth() + 1;\r\n    let result = seasonTasks;\r\n\r\n    if (month === 12 || month === 1 || month === 2) {\r\n      setSeasonTasks(result.filter((el) => el.season === 'Winter'));\r\n    } else if (month === 3 || month === 4 || month === 5) {\r\n      setSeasonTasks(result.filter((el) => el.season === 'Spring'));\r\n    } else if (month === 6 || month === 7 || month === 8) {\r\n      setSeasonTasks(result.filter((el) => el.season === 'Summer'));\r\n    } else if (month === 9 || month === 10 || month === 11) {\r\n      setSeasonTasks(result.filter((el) => el.season === 'Autumn'));\r\n    }\r\n\r\n    return;\r\n  }, []);\r\n\r\n  const [inputValues, setInputValues] = React.useState({\r\n    title: '',\r\n    description: '',\r\n  });\r\n\r\n  const [disabled, setDisabled] = React.useState(false);\r\n\r\n  function sendInputValues(title, description) {\r\n    setInputValues({ title: title, description: description });\r\n    setDisabled(true);\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs container direction=\"row\" spacing={3}>\r\n            <Grid item xs={12} lg={8}>\r\n              <Paper className={`${classes.paper} ${classes.goalsWrapper}`}>\r\n                <h2 className={classes.title}>Choose a Goal...</h2>\r\n                <Grid item xs={12}>\r\n                  <Paper className={classes.paper}>\r\n                    <Grid item xs container direction=\"column\" spacing={2}>\r\n                      {seasonTasks.map((el) => (\r\n                        <Grid item xs={12} className={classes.item} key={el.title}>\r\n                          <Paper\r\n                            onClick={() =>\r\n                              sendInputValues(el.title, el.description)\r\n                            }\r\n                            className={`${classes.paper} ${classes[el.season]}`}\r\n                          >\r\n                            <h4>{el.title}</h4>\r\n                            <Typography className={classes.description}>\r\n                              {el.description}\r\n                            </Typography>\r\n                            <p className={classes.term}>{el.season}</p>\r\n                          </Paper>\r\n                        </Grid>\r\n                      ))}\r\n\r\n                      {mock.map((el) => (\r\n                        <Grid item xs={12} className={classes.item} key={el.title}>\r\n                          <Paper\r\n                            onClick={() =>\r\n                              sendInputValues(el.title, el.description)\r\n                            }\r\n                            className={classes.paper}\r\n                          >\r\n                            <h4>{el.title}</h4>\r\n                            <Typography className={classes.description}>\r\n                              {el.description}\r\n                            </Typography>\r\n                            <p className={classes.term}>90 days</p>\r\n                          </Paper>\r\n                        </Grid>\r\n                      ))}\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} lg={4}>\r\n              <Paper className={classes.paper}>\r\n                <CreateTask values={inputValues} isDisabled={disabled} />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n    // <Box className={classes.wrapper}>\r\n    //   <Box className={classes.listWrapper}>\r\n    //     <Typography className={classes.header}>Choose a Goal...</Typography>\r\n    //     <List className={classes.list}>\r\n    //       {mock.map((el) => (\r\n    //         <ListItem\r\n    //           onClick={() => sendInputValues(el.title, el.description)}\r\n    //           className={classes.listItem}\r\n    //         >\r\n    //           <Typography className={classes.title}>{el.title}</Typography>\r\n    //           <Typography className={classes.description}>\r\n    //             {el.description}\r\n    //           </Typography>\r\n    //           <Typography className={classes.term}>90 days</Typography>\r\n    //         </ListItem>\r\n    //       ))}\r\n    //     </List>\r\n    //   </Box>\r\n    //   <CreateTask values={inputValues} isDisabled={disabled} />\r\n    // </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    defaultGoals: state.goalsReducer.defaultGoals,\r\n    message: state.messageReducer.message,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getDefaultGoals: () => {\r\n      dispatch(getDefaultGoalsAction());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask);\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\landingSettings.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Dashboard\\Dashboard.js",["234","235"],"import React, { useEffect} from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport createSeasonTask from '../../utils/createSeasonTask';\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport calcPercentage from '../../utils/calcPercentage';\r\nimport useStyles from './DashboardStyles';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport {\r\n  getUserGoalsAction,\r\n  editGoalByIdAction,\r\n} from '../../redux/actions/goals';\r\n\r\n// let mock = [\r\n//   createTask('Quit smoking', `Don't smoke every day during 90 days.`),\r\n//   createTask('Start jogging', `Jogging every day smoke during 90 days.`),\r\n//   createTask('Drink water', `Drink water every day smoke during 90 days.`),\r\n//   createTask('Read book', `Read book every day smoke during 90 days.`),\r\n// ];\r\n\r\n// let mockSeasons = [\r\n//   createSeasonTask(\r\n//     'Winter task',\r\n//     'Run 10 km on a cold winter morning',\r\n//     'Winter'\r\n//   ),\r\n// ];\r\n\r\n// mock[0].progress = 89;\r\n// mock[1].progress = 70;\r\n// mock[2].progress = 5;\r\n// mock[3].progress = 90;\r\n\r\n// mock[0].id = 1;\r\n// mock[1].id = 2;\r\n// mock[2].id = 3;\r\n// mock[3].id = 4;\r\n\r\n// mock[3].completed = true;\r\n\r\nfunction Dashboard(props) {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { getUserGoals, editGoalById, goalsList } = props;\r\n\r\n\tconst [filterValue, setFilter] = React.useState('');\r\n\t\r\n\tuseEffect(() => {\r\n\t\tgetUserGoals();\r\n\t},[]);\r\n\r\n  function handleInput(value) {\r\n    setFilter(value);\r\n  }\r\n\r\n  function filterPipe(list) {\r\n    list.sort((el, ev) =>\r\n      el.completed === ev.completed ? 0 : el.completed ? 1 : -1\r\n    );\r\n    return list.filter((el) => el.title.toLowerCase().includes(filterValue.toLowerCase()));\r\n  }\r\n\r\n  function getListItem(event, id) {\r\n    if (\r\n      event.target.nodeName !== 'BUTTON' &&\r\n      event.target.nodeName !== 'SPAN'\r\n    ) {\r\n      history.push(`/account/goals/${id}`);\r\n      return;\r\n    }\r\n    return;\r\n  }\r\n\r\n  function checkTask(id) {\r\n    editGoalById(id);\r\n    return;\r\n  }\r\n\r\n  function changeRoute(path) {\r\n    props.history.push(path);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2 className={classes.title}>Your goals</h2>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Paper className={classes.dashboardHeader}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tonInput={(ev) => handleInput(ev.target.value)}\r\n\t\t\t\t\t\t\t\tlabel=\"Search\"\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t// className={classes.addButton}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tchangeRoute('/account/addnew');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd Task\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t\t<Grid item xs container direction=\"column\" spacing={2} className={classes.listWrapper}>\r\n\t\t\t\t\t\t\t\t{!goalsList.length <= 0 ?\r\n\t\t\t\t\t\t\t\t\tfilterPipe(goalsList).map((el) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={el.id}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.taskItem}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(event) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tgetListItem(event, el.id)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tel.completed\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `${classes.listElementDisabled} ${classes.listElement}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: `${classes.listElement}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{el.completed ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/> :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<AutorenewIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tel.completed\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `${classes.taskText} ${classes.completed}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: classes.taskText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{el.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Box className={classes.progressBar}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"determinate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={calcPercentage(el.progress, el.term)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={el.completed}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheckTask(el.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDone\r\n                \t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.paper}><p>You don't have any goals.Good time for doing something!</p></Paper>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogged: state.authReducer.isLoggedIn,\r\n\t\tmessage: state.messageReducer.message,\r\n\t\tgoalsList: state.goalsReducer.goalsList\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUserGoals: () => {\r\n      dispatch(getUserGoalsAction());\r\n    },\r\n    editGoalById: (id) => {\r\n      dispatch(editGoalByIdAction(id));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Dashboard));\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ScoreBoard\\ScoreBoard.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\NavLink\\NavLink.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Logo\\Logo.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\TaskPage\\TaskPage.js",["236","237"],"import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport createTask from '../../utils/createTask';\r\nimport useStyles from './TaskPageStyles';\r\nimport calcPercentage from '../../utils/calcPercentage';\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport InfoMessage from '../InfoMessage/InfoMessage';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport {\r\n  editGoalByIdAction,\r\n  getGoalByIdAction,\r\n} from '../../redux/actions/goals';\r\nimport { Box, Button, Typography, Paper, Grid } from '@material-ui/core';\r\n\r\nlet goalDataMock = createTask(\r\n  'quit smokin!',\r\n  `Don't smoke every day during 90 days`\r\n);\r\n\r\ngoalDataMock.progress = 60;\r\n\r\nfunction TaskPage({ editGoalById, getGoalById, goalData, message, goalsList }) {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n\tuseEffect(() => {\r\n    getGoalById(id);\r\n  },[]);\r\n\r\n  function checkTask(id) {\r\n    editGoalById(id);\r\n    // отправляем запрос на обновление прогресса таски\r\n    return;\r\n  }\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<Box className={classes.taskPage}>\r\n\t\t\t\t\t\t<Typography className={classes.taskText}>\r\n\t\t\t\t\t\t\t{goalDataMock.title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Box className={classes.progressBarWrapper}>\r\n\t\t\t\t\t\t\t{goalDataMock.completed ?\r\n\t\t\t\t\t\t\t<DoneIcon\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t/> :\r\n\t\t\t\t\t\t\t<AutorenewIcon\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t\t<Box className={classes.progressBar}>\r\n\t\t\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"determinate\"\r\n\t\t\t\t\t\t\t\t\tvalue={calcPercentage(goalDataMock.progress, goalDataMock.term)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tdisabled={goalDataMock.completed}\r\n\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\tcheckTask(event.target.id);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<Box className={classes.secondaryWrapper}>\r\n\t\t\t\t\t\t\t<Box className={classes.descriptionWrapper}>\r\n\t\t\t\t\t\t\t\t<Typography className={classes.descriptionText}>\r\n\t\t\t\t\t\t\t\t\t<span>Description: </span>{goalDataMock.description}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography className={classes.descriptionText}>\r\n\t\t\t\t\t\t\t\t {`Last checked at: ${goalDataMock.data_last_checked.getDate()}/${goalDataMock.data_last_checked.getMonth()}/${goalDataMock.data_last_checked.getFullYear()}`}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography className={classes.descriptionText}>\r\n\t\t\t\t\t\t\t\t <span>Started at: </span>{`${goalDataMock.dateStarted.getDate()}/${goalDataMock.dateStarted.getMonth()}/${goalDataMock.dateStarted.getFullYear()}`}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography className={classes.descriptionText}>\r\n\t\t\t\t\t\t\t\t<span>Remaining time: </span>{`${\r\n\t\t\t\t\t\t\t\t\t\tgoalDataMock.term - goalDataMock.progress\r\n\t\t\t\t\t\t\t\t\t} days`}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box className={classes.achievementsWrapper}></Box>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Paper>\r\n        </Grid>\r\n        {/* <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid> */}\r\n      </Grid>\r\n    </div>\r\n    // <Box className={classes.taskPageWrapper}>\r\n      // <Box className={classes.taskPage}>\r\n      //   <Typography className={classes.taskText}>\r\n      //     {goalDataMock.title}\r\n      //   </Typography>\r\n      //   <Box className={classes.progressBarWrapper}>\r\n      //     <Box className={classes.progressBar}>\r\n      //       <ProgressBar\r\n      //         color=\"primary\"\r\n      //         variant=\"determinate\"\r\n      //         value={calcPercentage(goalDataMock.progress, goalDataMock.term)}\r\n      //       />\r\n      //     </Box>\r\n      //     <Button\r\n      //       disabled={goalDataMock.completed}\r\n      //       onClick={(event) => {\r\n      //         checkTask(event.target.id);\r\n      //       }}\r\n      //       color=\"primary\"\r\n      //       variant=\"contained\"\r\n      //     >\r\n      //       Done\r\n      //     </Button>\r\n      //   </Box>\r\n    //   </Box>\r\n      // <Box className={classes.secondaryWrapper}>\r\n      //   <Box className={classes.descriptionWrapper}>\r\n      //     <Typography className={classes.descriptionText}>\r\n      //       {goalDataMock.description}\r\n      //     </Typography>\r\n      //     <Typography className={classes.descriptionText}>\r\n      //       {`Last checked at: ${goalDataMock.data_last_checked.getDate()}/${goalDataMock.data_last_checked.getMonth()}/${goalDataMock.data_last_checked.getFullYear()}`}\r\n      //     </Typography>\r\n      //     <Typography className={classes.descriptionText}>\r\n      //       {`Started at: ${goalDataMock.dateStarted.getDate()}/${goalDataMock.dateStarted.getMonth()}/${goalDataMock.dateStarted.getFullYear()}`}\r\n      //     </Typography>\r\n      //     <Typography className={classes.descriptionText}>\r\n      //       {`Remaining time: ${\r\n      //         goalDataMock.term - goalDataMock.progress\r\n      //       } days`}\r\n      //     </Typography>\r\n      //   </Box>\r\n      //   <Box className={classes.achievementsWrapper}></Box>\r\n      // </Box>\r\n    //   {/* <InfoMessage info={message} /> */}\r\n    // </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    goalsList: state.goalsReducer.goalsList,\r\n    goalData: state.goalsReducer.goalByIdData,\r\n    message: state.messageReducer.message,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editGoalById: (id) => {\r\n      dispatch(editGoalByIdAction(id));\r\n    },\r\n    getGoalById: (id) => {\r\n      dispatch(getGoalByIdAction(id));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskPage);\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\messageReducer.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\reducers\\goalsReducer.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actionsTypes.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\redux\\actions\\goals.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\calcPercentage.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\TaskPage\\TaskPageStyles.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\createTask.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\ProgressBar\\ProgressBar.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\Dashboard\\DashboardStyles.js",["238","239","240","241"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dashboardWrapper: {\r\n    width: '90%',\r\n    margin: '0 auto',\r\n  },\r\n  taskList: {\r\n    width: '100%',\r\n    minHeight: '70vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  listElement: {\r\n    background: theme.palette.grey[100],\r\n\t\tborderRadius: '2px',\r\n\t\twidth: '100%',\r\n\t\tpadding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n\t\ttransition: '0.3s',\r\n\t\talignItems: 'center',\r\n    '&:hover:not(listElementDisabled) ': {\r\n      background: 'lightblue',\r\n      transition: '0.3s',\r\n      cursor: 'pointer',\r\n    },\r\n\t},\r\n  listElementDisabled: {\r\n\t\tbackground: theme.palette.grey[100],\r\n\t\tcolor: theme.palette.grey[400],\r\n\t\tpointerEvents: 'none',\r\n  },\r\n  addButton: {\r\n\t\tbackground: theme.palette.primary.dark,\r\n\t\tcolor: theme.palette.getContrastText(theme.palette.primary.dark)\r\n  },\r\n\ttaskText: {\r\n\t\twidth: '20%',\r\n\t\ttextAlign: 'left',\r\n\t\tfontFamily: theme.typography.fontFamily,\r\n\t\tfontSize: '20px',\r\n  },\r\n  progressBar: {\r\n    width: '70%',\r\n  },\r\n  searchWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  link: {\r\n    width: '100%',\r\n    textDecoration: 'none',\r\n    color: theme.palette.grey[800],\r\n  },\r\n  seasonTask: {\r\n    border: '1px solid',\r\n    borderRadius: '2px',\r\n    boxSizing: 'border-box',\r\n  },\r\n  Winter: {\r\n    borderColor: 'blue',\r\n    background: 'rgb(95,112,204)',\r\n    background:\r\n      'radial-gradient(circle, rgba(95,112,204,1) 0%, rgba(0,212,255,1) 100%)',\r\n  },\r\n  Spring: {\r\n    borderColor: 'green',\r\n    background: 'rgb(50,249,85))',\r\n    background:\r\n      'radial-gradient(circle, rgba(50,249,85,1) 0%, rgba(73,128,76,1) 100%)',\r\n  },\r\n  Summer: {\r\n    borderColor: 'red',\r\n    background: 'rgb(251,36,36)',\r\n    background:\r\n      'radial-gradient(circle, rgba(251,36,36,1) 0%, rgba(145,30,30,1) 100%)',\r\n  },\r\n  Autumn: {\r\n    borderColor: 'orange',\r\n    background: 'rgb(251,173,36)',\r\n    background:\r\n      'radial-gradient(circle, rgba(251,173,36,1) 0%, rgba(176,109,22,1) 100%)',\r\n  },\r\n\tpaper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n\t},\r\n\tlistWrapper: {\r\n\t\tmargin: 0\r\n\t},\r\n\tdashboardHeader: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-between'\r\n\t\t},\r\n\ttitle: {\r\n\t\ttextAlign: 'center'\r\n\t},\r\n\ticon: {\r\n\t\tmarginRight: '1em'\r\n\t},\r\n\ttaskItem: {\r\n\t\twidth: '100%'\r\n\t}\r\n}));\r\n\r\nexport default useStyles;\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\userData.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\dataService.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\urls.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\authHeader.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\createSeasonTask.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AddTask\\AddTaskStyles.js",["242","243","244","245"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlistElementDisabled: {\r\n\t\tbackground: theme.palette.grey[100],\r\n\t\tcolor: theme.palette.text.disabled,\r\n\t\tpointerEvents: 'none',\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.secondary,\r\n\t},\r\n\ttitle: {\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tgoalsWrapper: {\r\n\t\theight: '100%',\r\n\t},\r\n\tterm: {\r\n\t\tfontWeight: 700,\r\n\t},\r\n\titem: {\r\n\t\t'& :hover': {\r\n\t\t\tbackground: theme.palette.primary.light,\r\n\t\t\ttransition: '0.3s',\r\n\t\t\tcursor: 'pointer',\r\n\t\t},\r\n\t},\r\n\tseasonTask: {\r\n\t\tborder: '1px solid',\r\n\t\tborderRadius: '2px',\r\n\t\tboxSizing: 'border-box',\r\n\t},\r\n\tWinter: {\r\n\t\tborderColor: 'blue',\r\n\t\tbackground: 'rgb(95,112,204)',\r\n\t\tbackground:\r\n\t\t\t'radial-gradient(circle, rgba(95,112,204,1) 0%, rgba(0,212,255,1) 100%)',\r\n\t},\r\n\tSpring: {\r\n\t\tborderColor: 'green',\r\n\t\tbackground: 'rgb(50,249,85))',\r\n\t\tbackground:\r\n\t\t\t'radial-gradient(circle, rgba(50,249,85,1) 0%, rgba(73,128,76,1) 100%)',\r\n\t},\r\n\tSummer: {\r\n\t\tborderColor: 'red',\r\n\t\tbackground: 'rgb(251,36,36)',\r\n\t\tbackground:\r\n\t\t\t'radial-gradient(circle, rgba(251,36,36,1) 0%, rgba(145,30,30,1) 100%)',\r\n\t},\r\n\tAutumn: {\r\n\t\tborderColor: 'orange',\r\n\t\tbackground: 'rgb(251,173,36)',\r\n\t\tbackground:\r\n\t\t\t'radial-gradient(circle, rgba(251,173,36,1) 0%, rgba(176,109,22,1) 100%)',\r\n\t},\r\n    }\r\n  )\r\n);\r\n\r\nexport default useStyles;\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\services\\authService.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\CreateTask\\CreateTask.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\formatDate.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\utils\\compareDates.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\CreateTask\\CreateTaskStyle.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\MainPage\\MainPage.js",["246","247"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Route, Switch, useHistory, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getUsersInfoAction, searchUsersAction } from '../../redux/actions/user';\r\nimport { logoutAction } from '../../redux/actions/auth';\r\nimport ProfilePage from '../ProfilePage/ProfilePage';\r\nimport AddTask from '../AddTask/AddTask';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\nimport ScoreBoard from '../ScoreBoard/ScoreBoard';\r\nimport TaskPage from '../TaskPage/TaskPage';\r\nimport NavLink from '../NavLink/NavLink';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Logo from '../Logo/Logo';\r\nimport UserSearch from '../UserSearch/UserSearch';\r\nimport MockUserData from '../UserSearch/SearchMockData'; \r\nimport {\r\n  Button,\r\n  AppBar,\r\n  CssBaseline,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  List,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tdrawer: {\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: drawerWidth,\r\n\t\t\tflexShrink: 0,\r\n\t\t},\r\n\t},\r\n\tappBar: {\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t},\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tdisplay: 'none',\r\n\t\t},\r\n\t},\r\n\t// necessary for content to be below app bar\r\n\ttoolbar: theme.mixins.toolbar,\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n\tinfoPanel: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tmarginLeft: 'auto',\r\n\t\tminWidth: '5em'\r\n\t},\r\n\tlogoWrapper: {\r\n\t\tmaxWidth:'150px' \r\n\t},\r\n\tsearchInput: {\r\n\t\twidth: '20%',\r\n\t\tmarginLeft: 'auto'\r\n\t},\r\n\theader: {\r\n\t\tflexWrap: 'wrap'\r\n\t}\r\n}));\r\n\r\nfunction MainPage(props) {\r\n\tconst { window, logout, isLogged, userData, getUsersInfo, usersDataBySearch, searchUsers } = props;\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst history = useHistory();\r\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUsersInfo();\r\n\t\tsearchUsers();\r\n\t}, [searchUsers, getUsersInfo]);\r\n\r\n\tconst handleDrawerToggle = () => {\r\n\t\tsetMobileOpen(!mobileOpen);\r\n\t};\r\n\r\n\tconst handleLogout = () => {\r\n\t\tlogout();\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\tconst onSearchUserInput = (e) => {}\r\n\tconst onSearchUserSelected = (e, newVal) => {\r\n\t\tif (!newVal) return;\r\n\t\thistory.push(`/account/profile/${newVal.id}`);\r\n  }\r\n\r\n\r\n\tconst container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n\tconst drawer = (\r\n\t\t<div>\r\n\t\t\t<div className={classes.toolbar} />\r\n\t\t\t<Divider />\r\n\t\t\t<List>\r\n\t\t\t\t<NavLink text='DashBoard' url='/account/dashboard' />\r\n\t\t\t\t<NavLink text='Profile' url='/account/profile' />\r\n\t\t\t\t<NavLink text='Achievements' url='/account/achievements' />\r\n\t\t\t\t<NavLink text='Scoreboard' url='/account/scoreboard' />\r\n\t\t\t</List>\r\n\t\t\t<Divider />\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t\t<div className = {classes.root} >\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t<Toolbar className={classes.header}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tonClick={handleDrawerToggle}\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<div className={classes.logoWrapper}>\r\n\t\t\t\t\t\t<Logo/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Typography variant=\"h6\" noWrap className={classes.welcome}>\r\n\t\t\t\t\t\tHello, {userData.login.charAt(0).toUpperCase() + userData.login.slice(1)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<div className={classes.searchInput}>\r\n\t\t\t\t\t\t<UserSearch\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tdebounce: 500,\r\n\t\t\t\t\t\t\t\t\tlabel: \"Search user\",\r\n\t\t\t\t\t\t\t\t\ticon: true\r\n\t\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t\t\tcandidates={usersDataBySearch}\r\n\t\t\t\t\t\t\t\tonInput={onSearchUserInput}\r\n\t\t\t\t\t\t\t\tonChange={onSearchUserSelected}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.infoPanel}>\r\n\t\t\t\t\t\t<Avatar>{userData.login.charAt(0).toUpperCase()}</Avatar>\r\n\t\t\t\t\t\t<Button onClick={handleLogout}>\r\n\t\t\t\t\t\t\t<ExitToAppIcon />\r\n\t\t\t\t\t\t\tlogout\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n\t\t\t\t<Hidden smUp implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tcontainer={container}\r\n\t\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n\t\t\t\t\t\topen={mobileOpen}\r\n\t\t\t\t\t\tonClose={handleDrawerToggle}\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tModalProps={{\r\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t\t<Hidden xsDown implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\topen\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</nav>\r\n\t\t\t<main className={classes.content}>\r\n\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t{!isLogged ?\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path=\"*\">\r\n\t\t\t\t\t\t\t\t<Redirect to=\"/\" />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/account/dashboard\">\r\n\t\t\t\t\t\t\t\t<Dashboard />\r\n\t\t\t\t\t\t\t</Route> \r\n\t\t\t\t\t\t\t<Route exact path=\"/account/profile/:id\">\r\n\t\t\t\t\t\t\t\t<ProfilePage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path=\"/account/profile\">\r\n\t\t\t\t\t\t\t\t<ProfilePage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path=\"/account/addnew\">\r\n\t\t\t\t\t\t\t\t<AddTask />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path=\"/account/goals/:id\">\r\n\t\t\t\t\t\t\t\t<TaskPage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path=\"/account/scoreboard\">\r\n\t\t\t\t\t\t\t\t<ScoreBoard />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"*\">\r\n\t\t\t\t\t\t\t\t<Redirect to=\"/account/dashboard\" />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Fragment>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => {\r\n      dispatch(logoutAction());\r\n\t\t},\r\n\t\tgetUsersInfo: () => {\r\n\t\t\tdispatch(getUsersInfoAction());\r\n\t\t},\r\n\t\tsearchUsers: () => {\r\n\t\t\tdispatch(searchUsersAction())\r\n\t\t}\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\t\tisLogged: state.authReducer.isLoggedIn,\r\n\t\tuserData: state.userReducer.userData,\r\n\t\tusersDataBySearch: state.userReducer.usersDataBySearch,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\SearchMockData.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\UserSearch.js",["248","249"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { InputAdornment, TextField } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { searchUsersAction } from '../../redux/actions/user';\r\nimport debounce from './Debounce';\r\nimport search from './SearchLogic';\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n  {\r\n    field: {\r\n      width: '100%',\r\n\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n    },\r\n  }\r\n));\r\n\r\n\r\nconst UserSearch = ({candidates, onInput, onChange, options}) => {\r\n  const classes = useStyles();\r\n\r\n  const renderInput = (params) => {\r\n    if (options.icon) {\r\n      params.InputProps.startAdornment = (\r\n        <InputAdornment position=\"start\">\r\n          <SearchIcon />\r\n        </InputAdornment>\r\n      )\r\n    }\r\n    return <TextField\r\n      {...params}\r\n\t\t\tclassName={classes.field}\r\n\t\t\tplaceholder={options.label}\r\n\t\t\tsize=\"small\"\r\n      variant=\"outlined\"\r\n    />\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"search_user\"\r\n      options={candidates}\r\n      filterOptions={(options, state) => search(options, state.inputValue)}\r\n      freeSolo\r\n      getOptionLabel={(option) => option.login}\r\n      renderInput={renderInput}\r\n      onInputChange={debounce(onInput, options.debounce || 1000)}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserSearch;\r\n","C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\Debounce.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\UserSearch\\SearchLogic.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AboutUsContent\\AboutUsContent.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\HomeContent\\HomeContent.js",[],"C:\\Users\\kingm\\IdeaProjects\\hobbiton\\src\\main\\webapp\\src\\components\\AuthForm\\AuthFormStyle.js",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":1,"column":27,"nodeType":"256","messageId":"257","endLine":1,"endColumn":35},{"ruleId":"254","severity":1,"message":"258","line":10,"column":28,"nodeType":"256","messageId":"257","endLine":10,"endColumn":46},{"ruleId":"254","severity":1,"message":"259","line":11,"column":8,"nodeType":"256","messageId":"257","endLine":11,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":37,"column":33,"nodeType":"262","messageId":"263","endLine":37,"endColumn":35},{"ruleId":"264","severity":1,"message":"265","line":47,"column":5,"nodeType":"266","endLine":47,"endColumn":19,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":83,"column":8,"nodeType":"270","endLine":83,"endColumn":32},{"ruleId":"260","severity":1,"message":"261","line":88,"column":31,"nodeType":"262","messageId":"263","endLine":88,"endColumn":33},{"ruleId":"260","severity":1,"message":"261","line":107,"column":50,"nodeType":"262","messageId":"263","endLine":107,"endColumn":52},{"ruleId":"254","severity":1,"message":"271","line":156,"column":7,"nodeType":"256","messageId":"257","endLine":156,"endColumn":33},{"ruleId":"254","severity":1,"message":"272","line":163,"column":7,"nodeType":"256","messageId":"257","endLine":163,"endColumn":33},{"ruleId":"264","severity":1,"message":"273","line":44,"column":5,"nodeType":"266","endLine":44,"endColumn":7,"suggestions":"274"},{"ruleId":"264","severity":1,"message":"275","line":63,"column":6,"nodeType":"266","endLine":63,"endColumn":8,"suggestions":"276"},{"ruleId":"254","severity":1,"message":"277","line":12,"column":8,"nodeType":"256","messageId":"257","endLine":12,"endColumn":24},{"ruleId":"264","severity":1,"message":"278","line":59,"column":4,"nodeType":"266","endLine":59,"endColumn":6,"suggestions":"279"},{"ruleId":"254","severity":1,"message":"259","line":8,"column":8,"nodeType":"256","messageId":"257","endLine":8,"endColumn":19},{"ruleId":"264","severity":1,"message":"280","line":30,"column":5,"nodeType":"266","endLine":30,"endColumn":7,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":65,"column":5,"nodeType":"284","messageId":"263","endLine":65,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":71,"column":5,"nodeType":"284","messageId":"263","endLine":71,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":77,"column":5,"nodeType":"284","messageId":"263","endLine":77,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":83,"column":5,"nodeType":"284","messageId":"263","endLine":83,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":38,"column":3,"nodeType":"284","messageId":"263","endLine":38,"endColumn":13},{"ruleId":"282","severity":1,"message":"283","line":44,"column":3,"nodeType":"284","messageId":"263","endLine":44,"endColumn":13},{"ruleId":"282","severity":1,"message":"283","line":50,"column":3,"nodeType":"284","messageId":"263","endLine":50,"endColumn":13},{"ruleId":"282","severity":1,"message":"283","line":56,"column":3,"nodeType":"284","messageId":"263","endLine":56,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":1,"column":27,"nodeType":"256","messageId":"257","endLine":1,"endColumn":35},{"ruleId":"254","severity":1,"message":"285","line":18,"column":8,"nodeType":"256","messageId":"257","endLine":18,"endColumn":20},{"ruleId":"254","severity":1,"message":"286","line":5,"column":10,"nodeType":"256","messageId":"257","endLine":5,"endColumn":17},{"ruleId":"254","severity":1,"message":"287","line":6,"column":10,"nodeType":"256","messageId":"257","endLine":6,"endColumn":27},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'clearMessageAction' is defined but never used.","'InfoMessage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUserById' and 'isOwner'. Either include them or remove the dependency array. If 'getUserById' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["290"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getUserAchievementsSuccess' is assigned a value but never used.","'getUserAchievementsFailure' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDefaultGoals'. Either include it or remove the dependency array. If 'getDefaultGoals' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["291"],"React Hook React.useEffect has a missing dependency: 'seasonTasks'. Either include it or remove the dependency array.",["292"],"'createSeasonTask' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserGoals'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has missing dependencies: 'getGoalById' and 'id'. Either include them or remove the dependency array. If 'getGoalById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["294"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","'MockUserData' is defined but never used.","'connect' is defined but never used.","'searchUsersAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [userData, id, isOwner, getUserById]",{"range":"305","text":"306"},"Update the dependencies array to be: [getDefaultGoals]",{"range":"307","text":"308"},"Update the dependencies array to be: [seasonTasks]",{"range":"309","text":"310"},"Update the dependencies array to be: [getUserGoals]",{"range":"311","text":"312"},"Update the dependencies array to be: [getGoalById, id]",{"range":"313","text":"314"},[1389,1403],"[userData, id, isOwner, getUserById]",[1334,1336],"[getDefaultGoals]",[2065,2067],"[seasonTasks]",[1633,1635],"[getUserGoals]",[991,993],"[getGoalById, id]"]